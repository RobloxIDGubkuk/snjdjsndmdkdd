-- # FUNCTION & LOCAL # --

function Hop()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
local Site;
if foundAnything == "" then
Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
else
Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
end
local ID = ""
if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
lfoundAnything = Site.nextPageCursor
end
local num = 0;
for i,v in pairs(Site.data) do
local Possible = true
ID = tostring(v.id)
if tonumber(v.maxPlayers) > tonumber(v.playing) then
for _,Existing in pairs(AllIDs) do
if num ~= 0 then
if ID == tostring(Existing) then
Possible = false
end
else
if tonumber(actualHour) ~= tonumber(Existing) then
local delFile = pcall(function()
AllIDs = {}
table.insert(AllIDs, actualHour)
end)
end
end
num = num + 1
end
if Possible == true then
table.insert(AllIDs, ID)
wait()
pcall(function()
wait()
game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
end)
wait(4)
end
end
end
end
function Teleport() 
while wait() do
pcall(function()
TPReturner()
if foundAnything ~= "" then
TPReturner()
end
end)
end
end
Teleport()
end

local Notification = require(game:GetService("ReplicatedStorage").Notification)

function topos(Pos)
Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then game.Players.LocalPlayer.Character.Humanoid.Sit = false end
pcall(function() tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(Distance/210, Enum.EasingStyle.Linear),{CFrame = Pos}) end)
tween:Play()
if Distance <= 250 then
tween:Cancel()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
end
if _G.StopTween == true then
tween:Cancel()
_G.Clip = false
end
end

-- # REQUIRED # --

if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main", 9e9):FindFirstChild("ChooseTeam") then
for i,v in pairs({"MouseButton1Click", "MouseButton1Down", "Activated"}) do
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton[v])) do
v.Function()
end
end
end
wait(1)
if game.PlaceId == 2753915549 then 

Notification.new("<Color=Red> < FIRST SEA DETECTED > <Color=/>"):Display()
Notification.new("<Color=Red> < U MUST BE ON THIRD SEA > <Color=/>"):Display()
wait(1)
Notification.new("<Color=Red> < TELEPORT TO THIRD SEA !! > <Color=/>"):Display()
wait(2)
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")

elseif game.PlaceId == 4442272183 then

Notification.new("<Color=Red> < SECOND SEA DETECTED > <Color=/>"):Display()
Notification.new("<Color=Red> < U MUST BE ON THIRD SEA > <Color=/>"):Display()
wait(1)
Notification.new("<Color=Red> < TELEPORT TO THIRD SEA !! > <Color=/>"):Display()
wait(2)
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")

end

-- # INTI # --

wait(1)
Notification.new("<Color=Green> < SCRIPT AUTO FIND MIRRAGE > <Color=/>"):Display()
wait(1)
game.StarterGui:SetCore("SendNotification", {
Title = "---[WELCOME]---";
Text = ""..game.Players.LocalPlayer.DisplayName.."";
Duration = math.huge;
})
wait(0.1)
game.StarterGui:SetCore("SendNotification", {
Title = "---[DEVELOPER]---";
Text = "Made By SonicTuru#0001";
Duration = math.huge;
})
wait(0.1)
game.StarterGui:SetCore("SendNotification", {
Title = "---[SOCIAL MEDIA]---";
Text = "SonicTeam Discord\nhttps://discord.gg/EVxNxE7KK3";
Duration = math.huge;
})
wait(0.5)
Notification.new("<Color=Yellow> !! CHECKING IS THERE A MIRAGE ISLAND OR NOT !!<Color=/>"):Display()
wait(1)
if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
Notification.new("<Color=Green> !! Mirrage Its Spawn In This Server !! <Color=/>"):Display()
wait(1)
topos(game:GetService("Workspace").Map:FindFirstChild("MysticIsland").HumanoidRootPart.CFrame * CFrame.new(0,500,-100))
else
Notification.new("<Color=Red> !! No Mirrage In This Server !! <Color=/>"):Display()
wait(0.1)
Notification.new("Wait Server Hop !!"):Display()
wait(1)
Hop()
end

-- # END CODE # --
